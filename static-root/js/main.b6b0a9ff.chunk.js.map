{"version":3,"sources":["lookup/components.js","blogs/create.js","blogs/lookup.js","blogs/buttons.js","blogs/detail.js","blogs/list.js","blogs/components.js","App.js","serviceWorker.js","index.js"],"names":["Backendlookup","method","endpoint","callback","data","jsondata","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","onerror","e","send","BlogCreate","props","textAreaRef","React","createRef","didBlog","handleBackendUpdate","alert","className","onSubmit","event","preventDefault","newVal","current","value","content","ref","required","placeholder","type","ActionBtn","blog","action","didPerformAction","likes","actiondisp","display","HandleBackendAction","onClick","blogId","id","ApiBlogAction","ParentReblogBlog","parent","Blog","hideActions","didReblog","useState","actionBlog","SetactionBlog","match","pathname","urlblogId","groups","blogid","isDetail","handlePerformAction","newActionBlog","Fragment","Bloglist","blogsInit","setBlogsInit","blogs","setBlogs","BlogsDidSet","setBlogsdidset","useEffect","final","newBlogs","concat","username","ApiBlogList","handledidreBlog","UpdatedBlog","unshift","UpdatedfinalBlog","map","item","index","key","BlogsComponent","setnewBlogs","canBlog","newBlog","tempNewBlogs","BlogDetailComponent","Didlookup","setDidLookup","setBlog","handleBackendLookup","console","log","ApiBlogDetail","App","Boolean","hostname","AppEl","getElementById","ReactDOM","render","createElement","BlogsEl","dataset","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b6b0a9ff.chunk.js","sourcesContent":["function getCookie(name) {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        var cookies = document.cookie.split(';');\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\n\r\nexport function Backendlookup(method, endpoint, callback, data) {\r\n    let jsondata;\r\n    if (data) {\r\n        jsondata = JSON.stringify(data)\r\n    }\r\n    const xhr = new XMLHttpRequest()\r\n    const url = `http://localhost:8000/api${endpoint}`\r\n    xhr.responseType = \"json\"\r\n    const csrftoken = getCookie('csrftoken')\r\n    xhr.open(method, url)\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n\r\n    if (csrftoken) {\r\n        // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n    }\r\n    xhr.onload = function () {\r\n        if (xhr.status === 403) {\r\n            const detail = xhr.response.detail\r\n            if (detail === \"Authentication credentials were not provided.\") {\r\n                window.location.href = \"/login?showLoginRequired=true\"\r\n            }\r\n        }\r\n        callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.onerror = function (e) {\r\n        callback({\"message\": \"Request Error\"}, 400)\r\n    }\r\n    xhr.send(jsondata)\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport {ApiBlogCreate} from \"./lookup\";\r\n\r\n\r\n// Always use first letter capital for function in React.js //\r\n\r\nexport function BlogCreate(props) {\r\n    const textAreaRef = React.createRef()\r\n    const {didBlog} = props\r\n    const handleBackendUpdate = (response, status) => {\r\n        if (status === 201) {\r\n            didBlog(response)\r\n        } else {\r\n            alert(\"An error occurred. Please try again later!\")\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        // Backend request handler\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        ApiBlogCreate(newVal, handleBackendUpdate)\r\n\r\n        textAreaRef.current.value = ''\r\n    }\r\n    return  <div className={props.className}>\r\n                <form onSubmit={handleSubmit}>\r\n                    <textarea ref={textAreaRef} required={true} className='form-control' name='blogpost' placeholder='Your Blog...'>\r\n                    </textarea>\r\n                    <button type='submit' className='btn btn-danger'> Post</button>\r\n                </form>\r\n            </div>\r\n}","import {Backendlookup} from \"../lookup\";\r\n\r\n\r\nexport function ApiBlogCreate(RnewBlog, callback) {\r\n    Backendlookup(\"POST\", \"/blogs/create-blog/\", callback, {content: RnewBlog})\r\n}\r\n\r\nexport function ApiBlogAction(blogId, action, callback) {\r\n    const data = {id: blogId, action: action}\r\n    Backendlookup(\"POST\", \"/blogs/action/\", callback, data)\r\n}\r\n\r\nexport function ApiBlogDetail(blogId, callback) {\r\n    Backendlookup(\"GET\", `/blogs/${blogId}`, callback)\r\n}\r\n\r\nexport function ApiBlogList(username, callback) {\r\n    let endpoint = \"/blogs/\"\r\n    if (username) {\r\n        endpoint = `/blogs/?username=${username}`\r\n    }\r\n    Backendlookup(\"GET\", endpoint, callback)\r\n}\r\n","import {ApiBlogAction} from \"./lookup\";\r\nimport React from \"react\";\r\n\r\nexport function ActionBtn(props) {\r\n    const {blog, action, didPerformAction} = props\r\n    const likes = blog.likes ? blog.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-danger btn-sm'\r\n    const actiondisp = action.display ? action.display : 'Action'\r\n\r\n    const HandleBackendAction = (response, status) => {\r\n        if ((status === 200 || status === 201) && didPerformAction) {\r\n            didPerformAction(response, status)\r\n        }\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        ApiBlogAction(blog.id, action.type, HandleBackendAction)\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actiondisp}`: actiondisp\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n}","import React, {useState} from \"react\";\r\nimport {ActionBtn} from \"./buttons\";\r\n\r\nexport function ParentReblogBlog(props) {\r\n    const {blog} = props\r\n    return blog.parent ? <div className='row'>\r\n        <div className='col-11 mx-auto p-3 border rounded'>\r\n            <p className='mb-0 text-muted small text-left'>Reblogged</p>\r\n            <Blog hideActions className={' '} blog={blog.parent}/>\r\n        </div>\r\n    </div> : null\r\n}\r\n\r\n// export function ParentCommentBlog(props) {\r\n//     const {blog} = props\r\n//     return blog.parent ? <div className='row'>\r\n//         <div className='col-11 mx-auto p-3 border rounded'>\r\n//             <p className='mb-0 text-muted small text-left'>Reblogged</p>\r\n//             <Blog className={' '} blog={blog.parent}/>\r\n//         </div>\r\n//     </div> : null\r\n// }\r\n\r\nexport function Blog(props) {\r\n    const {blog, didReblog, hideActions} = props\r\n    const [actionBlog, SetactionBlog] = useState(props.blog ? props.blog : null)\r\n    const className = props.className ? props.className : 'col-12 mx-auto p-3 col-md-6 text-center'\r\n    const path = window.location.pathname\r\n    var match = path.match(/(?<blogid>\\d+)/)\r\n    const urlblogId = match ? match.groups.blogid : -1\r\n\r\n    const isDetail = `${blog.id}` === `${urlblogId}`\r\n    const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${blog.id}`\r\n    }\r\n    const handlePerformAction = (newActionBlog, status) => {\r\n        if (status === 200) {\r\n            SetactionBlog(newActionBlog)\r\n        } else if (status === 201) {\r\n            if (didReblog) {\r\n                didReblog(newActionBlog)\r\n            }\r\n        }\r\n    }\r\n    return <div className={className}><br/>\r\n        {/*<ParentCommentBlog blog={blog}/>*/}\r\n        <div>\r\n            <p>{blog.id} - {blog.content}</p>\r\n            <ParentReblogBlog blog={blog}/>\r\n        </div>\r\n        <br/>\r\n        <div className='btn'>\r\n            {(actionBlog && hideActions !== true) && <React.Fragment>\r\n            <ActionBtn blog={actionBlog} didPerformAction={handlePerformAction} action={{type: \"like\", display: \"Likes\"}}/>\r\n            <ActionBtn blog={actionBlog} didPerformAction={handlePerformAction} action={{type: \"unlike\", display: \"Unlike\"}}/>\r\n            <ActionBtn blog={actionBlog} didPerformAction={handlePerformAction} action={{type: \"reblog\", display: \"ReBlog\"}}/>\r\n            {/*<ActionBtn blog={actionBlog} didPerformAction = {handlePerformAction} action={{type: \"comment\", display: \"Comment\"}}/>*/}\r\n            </React.Fragment>\r\n            }\r\n            {isDetail === true ? null : <button className=\"btn btn-outline-danger btn-sm\" onClick={handleLink}>View</button>}\r\n        </div>\r\n    </div>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {ApiBlogList} from \"./lookup\";\r\nimport {Blog} from \"./detail\";\r\n\r\nexport function Bloglist(props) {\r\n    const [blogsInit, setBlogsInit] = useState([])\r\n    const [blogs, setBlogs] = useState([])\r\n    const [BlogsDidSet, setBlogsdidset] = useState(false)\r\n    useEffect(() => {\r\n        const final = ([...props.newBlogs].concat(blogsInit))\r\n        if (final.length !== blogs.length) {\r\n            setBlogs(final)\r\n        }\r\n    }, [props.newBlogs, blogs, blogsInit])\r\n\r\n    useEffect(() => {\r\n        if (BlogsDidSet === false) {\r\n            const Bloglisthandle = (response, status) => {\r\n                if (status === 200) {\r\n                    setBlogsInit(response)\r\n                    setBlogsdidset(true)\r\n                }\r\n            }\r\n            ApiBlogList(props.username, Bloglisthandle)\r\n        }\r\n    }, [blogsInit, BlogsDidSet, setBlogsdidset, props.username])\r\n\r\n\r\n    const handledidreBlog = (newBlogs) => {\r\n        const UpdatedBlog = [...blogsInit]\r\n        UpdatedBlog.unshift(newBlogs)\r\n        setBlogsInit(UpdatedBlog)\r\n        const UpdatedfinalBlog = [...blogs]\r\n        UpdatedfinalBlog.unshift(blogs)\r\n        setBlogs(UpdatedfinalBlog)\r\n    }\r\n    return blogs.map((item, index) => {\r\n            return <Blog\r\n                blog={item}\r\n                didReblog={handledidreBlog}\r\n                className='col-12 mx-auto w-75 border rounded bg-dark'\r\n                key={`${index}-${item.id}`}/>\r\n        }\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {BlogCreate} from './create'\r\nimport {Bloglist} from \"./list\";\r\nimport {Blog} from \"./detail\";\r\nimport {ApiBlogDetail} from \"./lookup\";\r\n\r\n\r\nexport function BlogsComponent(props) {\r\n    const [newBlogs, setnewBlogs] = useState([])\r\n\r\n    const canBlog = props.canBlog === 'false' ? false : true\r\n    const handleNewBlog = (newBlog) => {\r\n        let tempNewBlogs = [...newBlogs]\r\n        tempNewBlogs.unshift(newBlog)\r\n        setnewBlogs(tempNewBlogs)\r\n    }\r\n    return <div className={props.className}>\r\n            {canBlog === true && <BlogCreate didBlog={handleNewBlog} className='col-lg-6 offset-lg-3 mx-auto' />}\r\n        <Bloglist newBlogs={newBlogs} {...props}/>\r\n    </div>\r\n}\r\n\r\nexport function BlogDetailComponent(props) {\r\n    const {blogId} = props\r\n    const [Didlookup, setDidLookup] = useState(false)\r\n    const [blog, setBlog] = useState(null)\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setBlog(response)\r\n        } else {\r\n            console.log(response, status)\r\n            alert(\"There was an error finding your blog!\")\r\n        }\r\n    }\r\n    useEffect(()=> {\r\n        if (Didlookup === false) {\r\n\r\n            ApiBlogDetail(blogId, handleBackendLookup)\r\n            setDidLookup(true)\r\n        }\r\n    }, [blogId, Didlookup, setDidLookup])\r\n    return blog === null ? null : <Blog blog={blog} className={props.className}/>\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\n\nimport {BlogsComponent} from \"./blogs\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>BLOGST</h1>\n                <div>\n                    <BlogsComponent />\n                </div>\n            </header>\n        </div>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BlogsComponent, BlogDetailComponent} from \"./blogs\";\n\n\nconst AppEl = document.getElementById('blogst')\nif (AppEl) {\n    ReactDOM.render(<App />, AppEl)\n}\n\nconst e = React.createElement\nconst BlogsEl = document.getElementById('blogst')\nif (BlogsEl) {\n    ReactDOM.render(e(BlogsComponent, BlogsEl.dataset), BlogsEl)\n}\n\nconst BlogDetailElement = document.querySelectorAll(\".blogst-detail\")\n\nBlogDetailElement.forEach(container => {\n    ReactDOM.render(\n        e(BlogDetailComponent, container.dataset), container)\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}